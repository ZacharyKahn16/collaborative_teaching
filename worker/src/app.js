import { AccessFDB } from './workerToFDBConnection.js';
import http from 'http';
import io from 'socket.io';
import { LOGGER } from './Logger';

const httpServer = http.createServer();
const socketServer = io(httpServer);

// Hardcoded DB URL, add array of all FDBs
const url = 'mongodb://34.67.251.78:80';
const accessFDB = new AccessFDB(url);

const CONNECTION_EVENT = 'connection';
const RETRIEVE_FILE = 'Retrieve File';
const INSERT_FILE = 'Insert File';
const UPDATE_FILE = 'Update File';
const DELETE_FILE = 'Delete File';

socketServer.on(CONNECTION_EVENT, function(socket) {
  socket.on(RETRIEVE_FILE, function(msg) {
    const docID = msg.docID;

    accessFDB.retrieveFile(docID).then(
      function(resp) {
        console.log(resp);
      },
      function(err) {
        console.log(err);
        throw err;
      },
    );
  });

  socket.on(INSERT_FILE, function(msg) {
    // Docid will be generated by the server
    const docID = 1;
    const fileName = msg.fileName;
    const fileContents = msg.fileContents;
    const fileHash = msg.fileHash;
    const fileType = msg.fileType;
    // Timestamp will be generated by the server
    const timeStamp = 1;

    accessFDB.insertFile(docID, fileName, fileContents, fileHash, fileType, timeStamp).then(
      function(resp) {
        console.log(resp);
      },
      function(err) {
        console.log(err);
        throw err;
      },
    );
  });

  socket.on(UPDATE_FILE, function(msg) {
    // Docid will be generated by the server
    const docID = 1;
    const fileName = msg.fileName;
    const fileContents = msg.fileContents;
    const fileHash = msg.fileHash;
    const fileType = msg.fileType;
    // Timestamp will be generated by the server
    const timeStamp = 1;

    accessFDB.updateFile(docID, fileName, fileContents, fileHash, fileType, timeStamp).then(
      function(resp) {
        console.log(resp);
      },
      function(err) {
        console.log(err);
        throw err;
      },
    );
  });

  socket.on(DELETE_FILE, function(msg) {
    const docID = msg.docID;

    accessFDB.deleteFile(docID).then(
      function(resp) {
        console.log(resp);
      },
      function(err) {
        console.log(err);
        throw err;
      },
    );
  });
});

const PORT = process.env.PORT || 4000;
httpServer.listen(PORT, () => {
  LOGGER.debug(`Server started at http://localhost:${PORT}`);
});
